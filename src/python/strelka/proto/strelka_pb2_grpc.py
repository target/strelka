# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import strelka_pb2 as strelka__pb2


class FrontendStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ScanFile = channel.stream_stream(
        '/Frontend/ScanFile',
        request_serializer=strelka__pb2.ScanFileRequest.SerializeToString,
        response_deserializer=strelka__pb2.ScanResponse.FromString,
        )


class FrontendServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ScanFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FrontendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ScanFile': grpc.stream_stream_rpc_method_handler(
          servicer.ScanFile,
          request_deserializer=strelka__pb2.ScanFileRequest.FromString,
          response_serializer=strelka__pb2.ScanResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Frontend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
